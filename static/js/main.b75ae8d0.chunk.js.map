{"version":3,"sources":["Components/MenuItem.js","Components/MenuList.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Component","MenuList","props","items","map","item","name","description","price","App","state","this","setState","tag","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAGuBA,YCeRC,MAff,SAAkBC,GAEhB,IAAMC,EAAQD,EAAMC,MAAMC,KAAI,SAACC,GAAD,OAC5B,+BACA,6BAAKA,EAAKC,OACV,4BAAID,EAAKE,cACT,4BAAIF,EAAKG,UAHAH,EAAKC,SAMhB,OACE,6BAAKH,KCgGMM,E,kDAvGb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CACXP,MAAO,IAHQ,E,qDAOrB,WA+EIQ,KAAKC,SAAS,CAAET,MA9EJ,CACV,CACEG,KAAM,YACNC,YAAa,mDACbC,MAAO,GACPK,IAAK,SAEP,CACEP,KAAM,gBACNC,YAAa,sGACbC,MAAO,GACPK,IAAK,SAEP,CACEP,KAAM,SACNC,YAAa,uDACbC,MAAO,GACPK,IAAK,SAGP,CACEP,KAAM,SACNC,YAAa,yFACbC,MAAO,GACPK,IAAK,SAEP,CACEP,KAAM,SACNC,YAAa,8DACbC,MAAO,EACPK,IAAK,SAEP,CACEP,KAAM,kBACNC,YAAa,qBACbC,MAAO,GACPK,IAAK,SAGP,CACEP,KAAM,cACNC,YAAa,sDACbC,MAAO,EACPK,IAAK,QAEP,CACEP,KAAM,eACNC,YAAa,wDACbC,MAAO,EACPK,IAAK,QAEP,CACEP,KAAM,gBACNC,YAAa,oDACbC,MAAO,EACPK,IAAK,QAGP,CACEP,KAAM,UACNC,YAAa,mCACbC,MAAO,EACPK,IAAK,SAEP,CACEP,KAAM,OACNC,YAAa,qBACbC,MAAO,EACPK,IAAK,SAEP,CACEP,KAAM,UACNC,YAAa,4BACbC,MAAO,EACPK,IAAK,c,oBAQX,WAEE,OACE,qCACE,6CACA,sCACA,cAAC,EAAD,CAAUV,MAAOQ,KAAKD,MAAMP,e,GAjGlBH,aCOHc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b75ae8d0.chunk.js","sourcesContent":["import { Component } from 'react';\n\n\nclass MenuItem extends Component {\n  state = {\n    name: '',\n    description: '',\n    price: '',\n    tag: '',\n  }\n\n  componentDidMount() {\n    const items = [\n        {\n          name: \"Pepperoni\",\n          description: \"A round crust with sauce, cheese, and pepperonis\",\n          price: 13,\n          tag: \"pizza\",\n        },\n        {\n          name: \"Vegan Delight\",\n          description: \"A cornmeal, carrot and chia crust with sauce, vegan cheese, onions, peppers, mushrooms and broccoli\",\n          price: 13,\n          tag: \"pizza\",\n        },\n        {\n          name: \"Cheese\",\n          description: \"A simple yet delicious pie with a three cheese blend\",\n          price: 11,\n          tag: \"pizza\",\n        },\n\n        {\n          name: \"Caesar\",\n          description: \"Crisp romaine lettuce mixed with crutons and parmesan cheese tossed in caesar dressing\",\n          price: 10,\n          tag: \"salad\"\n        },\n        {\n          name: \"Garden\",\n          description: \"Spring leaf mix with tomato, cheese, crutons, and red onion\",\n          price: 8,\n          tag: \"salad\"\n        },\n        {\n          name: \"Grilled Chicken\",\n          description: \"Chicken on lettuce\",\n          price: 10,\n          tag: \"salad\"\n        },\n\n        {\n          name: \"Breadsticks\",\n          description: \"Freshly baked breadsticks drizzled in garlic butter\",\n          price: 6,\n          tag: \"side\",\n        },\n        {\n          name: \"Garlic Knots\",\n          description: \"Bite sized bread knots slathered with a garlic butter\",\n          price: 6,\n          tag: \"side\",\n        },\n        {\n          name: \"Fried Ravioli\",\n          description: \"Cheese stuffed ravioli fried to golden perfection\",\n          price: 8,\n          tag: \"side\",\n        },\n\n        {\n          name: \"Hot Tea\",\n          description: \"Ask the server for daily choices\",\n          price: 3,\n          tag: \"drink\",\n        },\n        {\n          name: \"Soda\",\n          description: \"Coke products only\",\n          price: 3,\n          tag: \"drink\",\n        },\n        {\n          name: \"Sangria\",\n          description: \"A chilled fruity red wine\",\n          price: 5,\n          tag: \"drink\",\n        }\n      ];\n\n      this.setState({ items })\n  }\n  render() {\n    return(\n      <ul></ul>\n    )\n  }\n}\n\n\n\n\n\nexport default MenuItem\n","import { Component } from 'react';\nimport MenuItem from './MenuItem'\n\nfunction MenuList(props) {\n\n  const items = props.items.map((item) => (\n    <li key={item.name}>\n    <h2>{item.name}</h2>\n    <p>{item.description}</p>\n    <p>{item.price}</p>\n    </li>\n  ));\n  return(\n    <ul>{items}</ul>\n  )\n}\n\n\nexport default MenuList\n","import { Component } from 'react';\nimport './App.css';\nimport MenuList from './MenuList'\nimport MenuItem from './MenuItem'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n  }\n}\n\ncomponentDidMount() {\n  const items = [\n      {\n        name: \"Pepperoni\",\n        description: \"A round crust with sauce, cheese, and pepperonis\",\n        price: 13,\n        tag: \"pizza\",\n      },\n      {\n        name: \"Vegan Delight\",\n        description: \"A cornmeal, carrot and chia crust with sauce, vegan cheese, onions, peppers, mushrooms and broccoli\",\n        price: 13,\n        tag: \"pizza\",\n      },\n      {\n        name: \"Cheese\",\n        description: \"A simple yet delicious pie with a three cheese blend\",\n        price: 11,\n        tag: \"pizza\",\n      },\n\n      {\n        name: \"Caesar\",\n        description: \"Crisp romaine lettuce mixed with crutons and parmesan cheese tossed in caesar dressing\",\n        price: 10,\n        tag: \"salad\",\n      },\n      {\n        name: \"Garden\",\n        description: \"Spring leaf mix with tomato, cheese, crutons, and red onion\",\n        price: 8,\n        tag: \"salad\",\n      },\n      {\n        name: \"Grilled Chicken\",\n        description: \"Chicken on lettuce\",\n        price: 10,\n        tag: \"salad\",\n      },\n\n      {\n        name: \"Breadsticks\",\n        description: \"Freshly baked breadsticks drizzled in garlic butter\",\n        price: 6,\n        tag: \"side\",\n      },\n      {\n        name: \"Garlic Knots\",\n        description: \"Bite sized bread knots slathered with a garlic butter\",\n        price: 6,\n        tag: \"side\",\n      },\n      {\n        name: \"Fried Ravioli\",\n        description: \"Cheese stuffed ravioli fried to golden perfection\",\n        price: 8,\n        tag: \"side\",\n      },\n\n      {\n        name: \"Hot Tea\",\n        description: \"Ask the server for daily choices\",\n        price: 3,\n        tag: \"drink\",\n      },\n      {\n        name: \"Soda\",\n        description: \"Coke products only\",\n        price: 3,\n        tag: \"drink\",\n      },\n      {\n        name: \"Sangria\",\n        description: \"A chilled fruity red wine\",\n        price: 5,\n        tag: \"drink\",\n      }\n    ];\n\n    this.setState({ items })\n}\n\n\n  render() {\n\n    return(\n      <>\n        <h1>Vic's Pizza</h1>\n        <h2>Menu</h2>\n        <MenuList items={this.state.items} />\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}